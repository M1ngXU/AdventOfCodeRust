{"message":"function `run` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod SomeModule {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `SomeModule` module.\n}\n\nprintln!(\"const value: {}\", SomeModule::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod SomeModule {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", SomeModule::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":55,"byte_end":58,"line_start":5,"line_end":5,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"\tlet d21r = crate::d21::run();","highlight_start":25,"highlight_end":28}],"label":"private function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the function `run` is defined here","code":null,"level":"note","spans":[{"file_name":"src/d21.rs","byte_start":1347,"byte_end":1369,"line_start":77,"line_end":77,"column_start":1,"column_end":23,"is_primary":true,"text":[{"text":"fn run() -> (i64, i64) {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m\u001b[1m: function `run` is private\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:5:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let d21r = crate::d21::run();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate function\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the function `run` is defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/d21.rs:77:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m77\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn run() -> (i64, i64) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/d21.rs","byte_start":1661,"byte_end":1991,"line_start":95,"line_end":109,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"\t\t\t(loop {","highlight_start":4,"highlight_end":11},{"text":"\t\t\t\tlet mut val = 0;","highlight_start":1,"highlight_end":21},{"text":"\t\t\t\tfor (i, mut p) in pls.iter_mut().enumerate() {","highlight_start":1,"highlight_end":51},{"text":"\t\t\t\t\tp.pos += next_dice() + next_dice() + next_dice();","highlight_start":1,"highlight_end":55},{"text":"\t\t\t\t\tp.pos = (p.pos - 1) % 10 + 1;","highlight_start":1,"highlight_end":35},{"text":"\t\t\t\t\tp.sco += p.pos;","highlight_start":1,"highlight_end":21},{"text":"\t\t\t\t\tif p.sco >= 1000 {","highlight_start":1,"highlight_end":24},{"text":"\t\t\t\t\t\tval = pls[1 - i].sco as u32;","highlight_start":1,"highlight_end":35},{"text":"\t\t\t\t\t\tbreak;","highlight_start":1,"highlight_end":13},{"text":"\t\t\t\t\t}","highlight_start":1,"highlight_end":7},{"text":"\t\t\t\t}","highlight_start":1,"highlight_end":6},{"text":"\t\t\t\tif val > 0 {","highlight_start":1,"highlight_end":17},{"text":"\t\t\t\t\tbreak val;","highlight_start":1,"highlight_end":16},{"text":"\t\t\t\t}","highlight_start":1,"highlight_end":6},{"text":"\t\t\t} * throwed)","highlight_start":1,"highlight_end":16}],"label":"expected `i64`, found `u32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"you can convert a `u32` to an `i64`","code":null,"level":"help","spans":[{"file_name":"src/d21.rs","byte_start":1661,"byte_end":1991,"line_start":95,"line_end":109,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"\t\t\t(loop {","highlight_start":4,"highlight_end":11},{"text":"\t\t\t\tlet mut val = 0;","highlight_start":1,"highlight_end":21},{"text":"\t\t\t\tfor (i, mut p) in pls.iter_mut().enumerate() {","highlight_start":1,"highlight_end":51},{"text":"\t\t\t\t\tp.pos += next_dice() + next_dice() + next_dice();","highlight_start":1,"highlight_end":55},{"text":"\t\t\t\t\tp.pos = (p.pos - 1) % 10 + 1;","highlight_start":1,"highlight_end":35},{"text":"\t\t\t\t\tp.sco += p.pos;","highlight_start":1,"highlight_end":21},{"text":"\t\t\t\t\tif p.sco >= 1000 {","highlight_start":1,"highlight_end":24},{"text":"\t\t\t\t\t\tval = pls[1 - i].sco as u32;","highlight_start":1,"highlight_end":35},{"text":"\t\t\t\t\t\tbreak;","highlight_start":1,"highlight_end":13},{"text":"\t\t\t\t\t}","highlight_start":1,"highlight_end":7},{"text":"\t\t\t\t}","highlight_start":1,"highlight_end":6},{"text":"\t\t\t\tif val > 0 {","highlight_start":1,"highlight_end":17},{"text":"\t\t\t\t\tbreak val;","highlight_start":1,"highlight_end":16},{"text":"\t\t\t\t}","highlight_start":1,"highlight_end":6},{"text":"\t\t\t} * throwed)","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":"((loop {\n\t\t\t\tlet mut val = 0;\n\t\t\t\tfor (i, mut p) in pls.iter_mut().enumerate() {\n\t\t\t\t\tp.pos += next_dice() + next_dice() + next_dice();\n\t\t\t\t\tp.pos = (p.pos - 1) % 10 + 1;\n\t\t\t\t\tp.sco += p.pos;\n\t\t\t\t\tif p.sco >= 1000 {\n\t\t\t\t\t\tval = pls[1 - i].sco as u32;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif val > 0 {\n\t\t\t\t\tbreak val;\n\t\t\t\t}\n\t\t\t} * throwed)).into()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/d21.rs:95:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m            (loop {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut val = 0;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                for (i, mut p) in pls.iter_mut().enumerate() {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    p.pos += next_dice() + next_dice() + next_dice();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            } * throwed)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|________________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `i64`, found `u32`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you can convert a `u32` to an `i64`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m((loop {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m~                 let mut val = 0;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m~                 for (i, mut p) in pls.iter_mut().enumerate() {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m~                     p.pos += next_dice() + next_dice() + next_dice();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m~                     p.pos = (p.pos - 1) % 10 + 1;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~                     p.sco += p.pos;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/d21.rs","byte_start":2109,"byte_end":2110,"line_start":113,"line_end":113,"column_start":46,"column_end":47,"is_primary":true,"text":[{"text":"\t\t\t.into_iter().fold(0, | a, b | cmp::max(a, b))","highlight_start":46,"highlight_end":47}],"label":"expected `i64`, found `u64`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"you can convert a `u64` to an `i64` and panic if the converted value doesn't fit","code":null,"level":"help","spans":[{"file_name":"src/d21.rs","byte_start":2109,"byte_end":2110,"line_start":113,"line_end":113,"column_start":46,"column_end":47,"is_primary":true,"text":[{"text":"\t\t\t.into_iter().fold(0, | a, b | cmp::max(a, b))","highlight_start":46,"highlight_end":47}],"label":null,"suggested_replacement":"b.try_into().unwrap()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/d21.rs:113:46\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            .into_iter().fold(0, | a, b | cmp::max(a, b))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `i64`, found `u64`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you can convert a `u64` to an `i64` and panic if the converted value doesn't fit\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            .into_iter().fold(0, | a, b | cmp::max(a, \u001b[0m\u001b[0m\u001b[38;5;10mb.try_into().unwrap()\u001b[0m\u001b[0m))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"message":"aborting due to 3 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 3 previous errors\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0308, E0603.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0308, E0603.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0308`.\u001b[0m\n"}
